

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Tue Sep 23 11:28:49 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,inline,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,space=0,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,inline,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,inline,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F883 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0004                     fsr             equ	4
    59     0004                     fsr0            equ	4
    60     0000                     indf            equ	0
    61     0000                     indf0           equ	0
    62     0002                     pc              equ	2
    63     0002                     pcl             equ	2
    64     000A                     pclath          equ	10
    65     0003                     status          equ	3
    66     0000                     INDF            equ	0	;# 
    67     0001                     TMR0            equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR             equ	4	;# 
    71     0005                     PORTA           equ	5	;# 
    72     0006                     PORTB           equ	6	;# 
    73     0007                     PORTC           equ	7	;# 
    74     0009                     PORTE           equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     0089                     TRISE           equ	137	;# 
   105     008C                     PIE1            equ	140	;# 
   106     008D                     PIE2            equ	141	;# 
   107     008E                     PCON            equ	142	;# 
   108     008F                     OSCCON          equ	143	;# 
   109     0090                     OSCTUNE         equ	144	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0093                     SSPMSK          equ	147	;# 
   114     0093                     MSK             equ	147	;# 
   115     0094                     SSPSTAT         equ	148	;# 
   116     0095                     WPUB            equ	149	;# 
   117     0096                     IOCB            equ	150	;# 
   118     0097                     VRCON           equ	151	;# 
   119     0098                     TXSTA           equ	152	;# 
   120     0099                     SPBRG           equ	153	;# 
   121     009A                     SPBRGH          equ	154	;# 
   122     009B                     PWM1CON         equ	155	;# 
   123     009C                     ECCPAS          equ	156	;# 
   124     009D                     PSTRCON         equ	157	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     0105                     WDTCON          equ	261	;# 
   128     0107                     CM1CON0         equ	263	;# 
   129     0108                     CM2CON0         equ	264	;# 
   130     0109                     CM2CON1         equ	265	;# 
   131     010C                     EEDATA          equ	268	;# 
   132     010C                     EEDAT           equ	268	;# 
   133     010D                     EEADR           equ	269	;# 
   134     010E                     EEDATH          equ	270	;# 
   135     010F                     EEADRH          equ	271	;# 
   136     0185                     SRCON           equ	389	;# 
   137     0187                     BAUDCTL         equ	391	;# 
   138     0188                     ANSEL           equ	392	;# 
   139     0189                     ANSELH          equ	393	;# 
   140     018C                     EECON1          equ	396	;# 
   141     018D                     EECON2          equ	397	;# 
   142     0000                     INDF            equ	0	;# 
   143     0001                     TMR0            equ	1	;# 
   144     0002                     PCL             equ	2	;# 
   145     0003                     STATUS          equ	3	;# 
   146     0004                     FSR             equ	4	;# 
   147     0005                     PORTA           equ	5	;# 
   148     0006                     PORTB           equ	6	;# 
   149     0007                     PORTC           equ	7	;# 
   150     0009                     PORTE           equ	9	;# 
   151     000A                     PCLATH          equ	10	;# 
   152     000B                     INTCON          equ	11	;# 
   153     000C                     PIR1            equ	12	;# 
   154     000D                     PIR2            equ	13	;# 
   155     000E                     TMR1            equ	14	;# 
   156     000E                     TMR1L           equ	14	;# 
   157     000F                     TMR1H           equ	15	;# 
   158     0010                     T1CON           equ	16	;# 
   159     0011                     TMR2            equ	17	;# 
   160     0012                     T2CON           equ	18	;# 
   161     0013                     SSPBUF          equ	19	;# 
   162     0014                     SSPCON          equ	20	;# 
   163     0015                     CCPR1           equ	21	;# 
   164     0015                     CCPR1L          equ	21	;# 
   165     0016                     CCPR1H          equ	22	;# 
   166     0017                     CCP1CON         equ	23	;# 
   167     0018                     RCSTA           equ	24	;# 
   168     0019                     TXREG           equ	25	;# 
   169     001A                     RCREG           equ	26	;# 
   170     001B                     CCPR2           equ	27	;# 
   171     001B                     CCPR2L          equ	27	;# 
   172     001C                     CCPR2H          equ	28	;# 
   173     001D                     CCP2CON         equ	29	;# 
   174     001E                     ADRESH          equ	30	;# 
   175     001F                     ADCON0          equ	31	;# 
   176     0081                     OPTION_REG      equ	129	;# 
   177     0085                     TRISA           equ	133	;# 
   178     0086                     TRISB           equ	134	;# 
   179     0087                     TRISC           equ	135	;# 
   180     0089                     TRISE           equ	137	;# 
   181     008C                     PIE1            equ	140	;# 
   182     008D                     PIE2            equ	141	;# 
   183     008E                     PCON            equ	142	;# 
   184     008F                     OSCCON          equ	143	;# 
   185     0090                     OSCTUNE         equ	144	;# 
   186     0091                     SSPCON2         equ	145	;# 
   187     0092                     PR2             equ	146	;# 
   188     0093                     SSPADD          equ	147	;# 
   189     0093                     SSPMSK          equ	147	;# 
   190     0093                     MSK             equ	147	;# 
   191     0094                     SSPSTAT         equ	148	;# 
   192     0095                     WPUB            equ	149	;# 
   193     0096                     IOCB            equ	150	;# 
   194     0097                     VRCON           equ	151	;# 
   195     0098                     TXSTA           equ	152	;# 
   196     0099                     SPBRG           equ	153	;# 
   197     009A                     SPBRGH          equ	154	;# 
   198     009B                     PWM1CON         equ	155	;# 
   199     009C                     ECCPAS          equ	156	;# 
   200     009D                     PSTRCON         equ	157	;# 
   201     009E                     ADRESL          equ	158	;# 
   202     009F                     ADCON1          equ	159	;# 
   203     0105                     WDTCON          equ	261	;# 
   204     0107                     CM1CON0         equ	263	;# 
   205     0108                     CM2CON0         equ	264	;# 
   206     0109                     CM2CON1         equ	265	;# 
   207     010C                     EEDATA          equ	268	;# 
   208     010C                     EEDAT           equ	268	;# 
   209     010D                     EEADR           equ	269	;# 
   210     010E                     EEDATH          equ	270	;# 
   211     010F                     EEADRH          equ	271	;# 
   212     0185                     SRCON           equ	389	;# 
   213     0187                     BAUDCTL         equ	391	;# 
   214     0188                     ANSEL           equ	392	;# 
   215     0189                     ANSELH          equ	393	;# 
   216     018C                     EECON1          equ	396	;# 
   217     018D                     EECON2          equ	397	;# 
   218                           
   219                           	psect	idataCOMMON
   220     0151                     __pidataCOMMON:
   221                           
   222                           ;initializer for _start_400ms
   223     0151  34B0               	retlw	176
   224     0152  343C               	retlw	60
   225                           
   226                           ;initializer for _LOW
   227     0153  34FF               	retlw	255
   228                           
   229                           	psect	idataBANK0
   230     0121                     __pidataBANK0:
   231                           
   232                           ;initializer for _options
   233     0121  3477               	retlw	119
   234     0122  3414               	retlw	20
   235     0123  34B3               	retlw	179
   236     0124  34B6               	retlw	182
   237     0125  34D4               	retlw	212
   238     0126  34E6               	retlw	230
   239     0127  34E7               	retlw	231
   240     0128  3434               	retlw	52
   241     0129  34F7               	retlw	247
   242     012A  34F6               	retlw	246
   243     012B  34F5               	retlw	245
   244     012C  34C7               	retlw	199
   245     012D  3463               	retlw	99
   246     012E  3497               	retlw	151
   247     012F  34E3               	retlw	227
   248     0130  34E1               	retlw	225
   249                           
   250                           ;initializer for _HIGH
   251     0131  34FF               	retlw	255
   252     000E                     _TMR1           set	14
   253     0005                     _PORTAbits      set	5
   254     0006                     _PORTBbits      set	6
   255     0007                     _PORTC          set	7
   256     000B                     _INTCONbits     set	11
   257     000C                     _PIR1bits       set	12
   258     0010                     _T1CONbits      set	16
   259     0096                     _IOCB           set	150
   260     0087                     _TRISC          set	135
   261     0086                     _TRISB          set	134
   262     0085                     _TRISA          set	133
   263     008C                     _PIE1bits       set	140
   264     0189                     _ANSELH         set	393
   265     0188                     _ANSEL          set	392
   266                           
   267                           	psect	cinit
   268     000F                     start_initialization:	
   269                           ; #config settings
   270                           
   271     000F                     __initialization:
   272                           
   273                           ; Initialize objects allocated to BANK0
   274     000F  1383               	bcf	3,7	;select IRP bank0
   275     0010  3031               	movlw	low (__pdataBANK0+17)
   276     0011  00FD               	movwf	btemp+-1
   277     0012  3001               	movlw	high __pidataBANK0
   278     0013  00FE               	movwf	btemp
   279     0014  3021               	movlw	low __pidataBANK0
   280     0015  00FF               	movwf	btemp+1
   281     0016  3020               	movlw	low __pdataBANK0
   282     0017  0084               	movwf	4
   283     0018  118A  2136  118A   	fcall	init_ram0
   284                           
   285                           ; Initialize objects allocated to COMMON
   286     001B  118A  2151  118A   	fcall	__pidataCOMMON	;fetch initializer
   287     001E  00F9               	movwf	__pdataCOMMON& (0+127)
   288     001F  118A  2152  118A   	fcall	__pidataCOMMON+1	;fetch initializer
   289     0022  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   290     0023  118A  2153  118A   	fcall	__pidataCOMMON+2	;fetch initializer
   291     0026  00FB               	movwf	(__pdataCOMMON+2)& (0+127)
   292                           
   293                           ; Clear objects allocated to BANK0
   294     0027  01B1               	clrf	__pbssBANK0& (0+127)
   295     0028  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   296                           
   297                           ; Clear objects allocated to COMMON
   298     0029  01FC               	clrf	__pbssCOMMON& (0+127)
   299     002A  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   300     002B                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303     002B                     __end_of__initialization:
   304     002B  0183               	clrf	3
   305     002C  118A  28D9         	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMMON
   308     007C                     __pbssCOMMON:
   309     007C                     _overflow400:
   310     007C                     	ds	2
   311                           
   312                           	psect	dataCOMMON
   313     0079                     __pdataCOMMON:
   314     0079                     _start_400ms:
   315     0079                     	ds	2
   316     007B                     _LOW:
   317     007B                     	ds	1
   318                           
   319                           	psect	bssBANK0
   320     0031                     __pbssBANK0:
   321     0031                     _displaying:
   322     0031                     	ds	2
   323                           
   324                           	psect	dataBANK0
   325     0020                     __pdataBANK0:
   326     0020                     _options:
   327     0020                     	ds	16
   328     0030                     _HIGH:
   329     0030                     	ds	1
   330                           
   331                           	psect	inittext
   332     0132                     init_fetch0:	
   333                           ;	Called with low address in FSR and high address in W
   334                           
   335     0132  087E               	movf	btemp,w
   336     0133  008A               	movwf	10
   337     0134  087F               	movf	btemp+1,w
   338     0135  0082               	movwf	2
   339     0136                     init_ram0:	
   340                           ;Called with:
   341                           ;	high address of idata address in btemp 
   342                           ;	low address of idata address in btemp+1 
   343                           ;	low address of data in FSR
   344                           ;	high address + 1 of data in btemp-1
   345                           
   346     0136  118A  2132  118A   	fcall	init_fetch0
   347     0139  0080               	movwf	0
   348     013A  0A84               	incf	4,f
   349     013B  0804               	movf	4,w
   350     013C  067D               	xorwf	btemp+-1,w
   351     013D  1903               	btfsc	3,2
   352     013E  3400               	retlw	0
   353     013F  0AFF               	incf	btemp+1,f
   354     0140  1903               	btfsc	3,2
   355     0141  0AFE               	incf	btemp,f
   356     0142  2936               	goto	init_ram0
   357                           
   358                           	psect	cstackCOMMON
   359     0070                     __pcstackCOMMON:
   360     0070                     ?_tmr1_load_400ms:
   361     0070                     ?_tmr1_init_400ms_tick:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_isr:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?i1_tmr1_load_400ms:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?_get_mics:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ??i1_tmr1_load_400ms:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 1 bytes @ 0x0
   381     0070                     	ds	2
   382     0072                     ??_get_mics:
   383                           
   384                           ; 1 bytes @ 0x2
   385     0072                     	ds	2
   386     0074                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x4
   389     0074                     	ds	3
   390     0077                     isr@mics:
   391                           
   392                           ; 2 bytes @ 0x7
   393     0077                     	ds	2
   394                           
   395                           	psect	cstackBANK0
   396     0000                     __pcstackBANK0:
   397     0000                     ??_tmr1_load_400ms:
   398     0000                     ??_tmr1_init_400ms_tick:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0000                     ??_main:	
   402                           ; 1 bytes @ 0x0
   403                           
   404                           
   405                           	psect	maintext
   406     00D9                     __pmaintext:	
   407                           ; 1 bytes @ 0x0
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 128 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   427 ;;      Params:         0       0       0       0
   428 ;;      Locals:         0       0       0       0
   429 ;;      Temps:          0       0       0       0
   430 ;;      Totals:         0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels required when called: 4
   433 ;; This function calls:
   434 ;;		_tmr1_init_400ms_tick
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440     00D9                     _main:	
   441                           ;psect for function _main
   442                           
   443     00D9                     l692:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 130:     ANSEL = 0X00;
   449     00D9  1683               	bsf	3,5	;RP0=1, select bank3
   450     00DA  1703               	bsf	3,6	;RP1=1, select bank3
   451     00DB  0188               	clrf	8	;volatile
   452                           
   453                           ;main.c: 131:     ANSELH = 0X00;
   454     00DC  0189               	clrf	9	;volatile
   455                           
   456                           ;main.c: 133:     TRISA = 0X00;
   457     00DD  1683               	bsf	3,5	;RP0=1, select bank1
   458     00DE  1303               	bcf	3,6	;RP1=0, select bank1
   459     00DF  0185               	clrf	5	;volatile
   460     00E0                     l694:
   461                           
   462                           ;main.c: 134:     TRISB = 3;
   463     00E0  3003               	movlw	3
   464     00E1  0086               	movwf	6	;volatile
   465                           
   466                           ;main.c: 135:     TRISC = 0X00;
   467     00E2  0187               	clrf	7	;volatile
   468     00E3                     l696:
   469                           
   470                           ;main.c: 138:     INTCONbits.GIE = 1;
   471     00E3  178B               	bsf	11,7	;volatile
   472     00E4                     l698:
   473                           
   474                           ;main.c: 139:     INTCONbits.RBIE = 1;
   475     00E4  158B               	bsf	11,3	;volatile
   476     00E5                     l700:
   477                           
   478                           ;main.c: 140:     IOCB = 0X03;
   479     00E5  3003               	movlw	3
   480     00E6  0096               	movwf	22	;volatile
   481     00E7                     l702:
   482                           
   483                           ;main.c: 142:     tmr1_init_400ms_tick();
   484     00E7  118A  210A  118A   	fcall	_tmr1_init_400ms_tick
   485     00EA                     l704:
   486                           
   487                           ;main.c: 144:     PORTC = 0;
   488     00EA  1283               	bcf	3,5	;RP0=0, select bank0
   489     00EB  1303               	bcf	3,6	;RP1=0, select bank0
   490     00EC  0187               	clrf	7	;volatile
   491     00ED                     l706:
   492                           
   493                           ;main.c: 145:     PORTAbits.RA0 = 0;
   494     00ED  1005               	bcf	5,0	;volatile
   495     00EE                     l708:
   496                           
   497                           ;main.c: 146:     PORTAbits.RA1 = 1;
   498     00EE  1485               	bsf	5,1	;volatile
   499     00EF                     l73:	
   500                           ;main.c: 148:     while(1) {
   501                           
   502     00EF                     l74:	
   503                           ;main.c: 149:     }
   504                           
   505     00EF  28EF               	goto	l73
   506     00F0  118A  280D         	ljmp	start
   507     00F2                     __end_of_main:
   508                           
   509                           	psect	text1
   510     010A                     __ptext1:	
   511 ;; *************** function _tmr1_init_400ms_tick *****************
   512 ;; Defined at:
   513 ;;		line 70 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   527 ;;      Params:         0       0       0       0
   528 ;;      Locals:         0       0       0       0
   529 ;;      Temps:          0       0       0       0
   530 ;;      Totals:         0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 3
   534 ;; This function calls:
   535 ;;		_tmr1_load_400ms
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541     010A                     _tmr1_init_400ms_tick:	
   542                           ;psect for function _tmr1_init_400ms_tick
   543                           
   544     010A                     l626:	
   545                           ;incstack = 0
   546                           ; Regs used in _tmr1_init_400ms_tick: [wreg+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;main.c: 72:     T1CONbits.TMR1ON = 0;
   550     010A  1283               	bcf	3,5	;RP0=0, select bank0
   551     010B  1303               	bcf	3,6	;RP1=0, select bank0
   552     010C  1010               	bcf	16,0	;volatile
   553                           
   554                           ;main.c: 73:     T1CONbits.T1CKPS0 = 1;
   555     010D  1610               	bsf	16,4	;volatile
   556                           
   557                           ;main.c: 74:     T1CONbits.T1CKPS1 = 1;
   558     010E  1690               	bsf	16,5	;volatile
   559                           
   560                           ;main.c: 75:     T1CONbits.TMR1CS = 0;
   561     010F  1090               	bcf	16,1	;volatile
   562                           
   563                           ;main.c: 76:     T1CONbits.T1OSCEN = 0;
   564     0110  1190               	bcf	16,3	;volatile
   565     0111                     l628:
   566                           
   567                           ;main.c: 77:     TMR1 = 0;
   568     0111  018E               	clrf	14	;volatile
   569     0112  018F               	clrf	15	;volatile
   570     0113                     l630:
   571                           
   572                           ;main.c: 78:     tmr1_load_400ms();
   573     0113  118A  2143  118A   	fcall	_tmr1_load_400ms
   574     0116                     l632:
   575                           
   576                           ;main.c: 79:     PIR1bits.TMR1IF = 0;
   577     0116  1283               	bcf	3,5	;RP0=0, select bank0
   578     0117  1303               	bcf	3,6	;RP1=0, select bank0
   579     0118  100C               	bcf	12,0	;volatile
   580     0119                     l634:
   581                           
   582                           ;main.c: 80:     PIE1bits.TMR1IE = 1;
   583     0119  1683               	bsf	3,5	;RP0=1, select bank1
   584     011A  1303               	bcf	3,6	;RP1=0, select bank1
   585     011B  140C               	bsf	12,0	;volatile
   586     011C                     l636:
   587                           
   588                           ;main.c: 81:     INTCONbits.PEIE = 1;
   589     011C  170B               	bsf	11,6	;volatile
   590     011D                     l638:
   591                           
   592                           ;main.c: 82:     T1CONbits.TMR1ON = 1;
   593     011D  1283               	bcf	3,5	;RP0=0, select bank0
   594     011E  1303               	bcf	3,6	;RP1=0, select bank0
   595     011F  1410               	bsf	16,0	;volatile
   596     0120                     l45:
   597     0120  0008               	return
   598     0121                     __end_of_tmr1_init_400ms_tick:
   599                           
   600                           	psect	text2
   601     0143                     __ptext2:	
   602 ;; *************** function _tmr1_load_400ms *****************
   603 ;; Defined at:
   604 ;;		line 62 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   618 ;;      Params:         0       0       0       0
   619 ;;      Locals:         0       0       0       0
   620 ;;      Temps:          0       0       0       0
   621 ;;      Totals:         0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 2
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_tmr1_init_400ms_tick
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     0143                     _tmr1_load_400ms:	
   633                           ;psect for function _tmr1_load_400ms
   634                           
   635     0143                     l620:	
   636                           ;incstack = 0
   637                           ; Regs used in _tmr1_load_400ms: [wreg]
   638                           
   639                           
   640                           ;main.c: 63:     TMR1 = start_400ms;
   641     0143  087A               	movf	_start_400ms+1,w
   642     0144  1283               	bcf	3,5	;RP0=0, select bank0
   643     0145  1303               	bcf	3,6	;RP1=0, select bank0
   644     0146  008F               	movwf	15	;volatile
   645     0147  0879               	movf	_start_400ms,w
   646     0148  008E               	movwf	14	;volatile
   647     0149                     l39:
   648     0149  0008               	return
   649     014A                     __end_of_tmr1_load_400ms:
   650                           
   651                           	psect	text3
   652     002E                     __ptext3:	
   653 ;; *************** function _isr *****************
   654 ;; Defined at:
   655 ;;		line 87 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  mics            2    7[COMMON] int 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, pclath, btemp1, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   669 ;;      Params:         0       0       0       0
   670 ;;      Locals:         2       0       0       0
   671 ;;      Temps:          3       0       0       0
   672 ;;      Totals:         5       0       0       0
   673 ;;Total ram usage:        5 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 1
   676 ;; This function calls:
   677 ;;		_get_mics
   678 ;;		i1_tmr1_load_400ms
   679 ;; This function is called by:
   680 ;;		Interrupt level 1
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684     002E                     _isr:	
   685                           ;psect for function _isr
   686                           
   687     002E                     i1l716:
   688                           
   689                           ;main.c: 90:     if (PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
   690     002E  1683               	bsf	3,5	;RP0=1, select bank1
   691     002F  1303               	bcf	3,6	;RP1=0, select bank1
   692     0030  1C0C               	btfss	12,0	;volatile
   693     0031  2833               	goto	u14_21
   694     0032  2834               	goto	u14_20
   695     0033                     u14_21:
   696     0033  2888               	goto	i1l742
   697     0034                     u14_20:
   698     0034                     i1l718:
   699     0034  1283               	bcf	3,5	;RP0=0, select bank0
   700     0035  1303               	bcf	3,6	;RP1=0, select bank0
   701     0036  1C0C               	btfss	12,0	;volatile
   702     0037  2839               	goto	u15_21
   703     0038  283A               	goto	u15_20
   704     0039                     u15_21:
   705     0039  2888               	goto	i1l742
   706     003A                     u15_20:
   707     003A                     i1l720:
   708                           
   709                           ;main.c: 91:         tmr1_load_400ms();
   710     003A  118A  214A  118A   	fcall	i1_tmr1_load_400ms
   711     003D                     i1l722:
   712                           
   713                           ;main.c: 92:         PIR1bits.TMR1IF = 0;
   714     003D  1283               	bcf	3,5	;RP0=0, select bank0
   715     003E  1303               	bcf	3,6	;RP1=0, select bank0
   716     003F  100C               	bcf	12,0	;volatile
   717     0040                     i1l724:
   718                           
   719                           ;main.c: 93:         if (overflow400 > 5 && displaying==1) {
   720     0040  087D               	movf	_overflow400+1,w
   721     0041  3A80               	xorlw	128
   722     0042  00FF               	movwf	btemp1
   723     0043  3080               	movlw	128
   724     0044  027F               	subwf	btemp1,w
   725     0045  1D03               	skipz
   726     0046  2849               	goto	u16_25
   727     0047  3006               	movlw	6
   728     0048  027C               	subwf	_overflow400,w
   729     0049                     u16_25:
   730     0049  1C03               	skipc
   731     004A  284C               	goto	u16_21
   732     004B  284D               	goto	u16_20
   733     004C                     u16_21:
   734     004C  285B               	goto	i1l730
   735     004D                     u16_20:
   736     004D                     i1l726:
   737     004D  1283               	bcf	3,5	;RP0=0, select bank0
   738     004E  1303               	bcf	3,6	;RP1=0, select bank0
   739     004F  0331               	decf	_displaying,w
   740     0050  0432               	iorwf	_displaying+1,w
   741     0051  1D03               	btfss	3,2
   742     0052  2854               	goto	u17_21
   743     0053  2855               	goto	u17_20
   744     0054                     u17_21:
   745     0054  285B               	goto	i1l730
   746     0055                     u17_20:
   747     0055                     i1l728:
   748                           
   749                           ;main.c: 94:             PORTC = 0;
   750     0055  0187               	clrf	7	;volatile
   751                           
   752                           ;main.c: 95:             displaying = 0;
   753     0056  01B1               	clrf	_displaying
   754     0057  01B2               	clrf	_displaying+1
   755                           
   756                           ;main.c: 96:             overflow400 = 0;
   757     0058  01FC               	clrf	_overflow400
   758     0059  01FD               	clrf	_overflow400+1
   759                           
   760                           ;main.c: 97:         } else if (displaying == 0 && overflow400==3) {
   761     005A  2888               	goto	i1l742
   762     005B                     i1l730:
   763     005B  1283               	bcf	3,5	;RP0=0, select bank0
   764     005C  1303               	bcf	3,6	;RP1=0, select bank0
   765     005D  0831               	movf	_displaying,w
   766     005E  0432               	iorwf	_displaying+1,w
   767     005F  1D03               	btfss	3,2
   768     0060  2862               	goto	u18_21
   769     0061  2863               	goto	u18_20
   770     0062                     u18_21:
   771     0062  2875               	goto	i1l738
   772     0063                     u18_20:
   773     0063                     i1l732:
   774     0063  3003               	movlw	3
   775     0064  067C               	xorwf	_overflow400,w
   776     0065  047D               	iorwf	_overflow400+1,w
   777     0066  1D03               	btfss	3,2
   778     0067  2869               	goto	u19_21
   779     0068  286A               	goto	u19_20
   780     0069                     u19_21:
   781     0069  2875               	goto	i1l738
   782     006A                     u19_20:
   783     006A                     i1l734:
   784                           
   785                           ;main.c: 98:             PORTC = 0b11100011;
   786     006A  30E3               	movlw	227
   787     006B  0087               	movwf	7	;volatile
   788     006C                     i1l736:
   789                           
   790                           ;main.c: 99:             displaying = 1;
   791     006C  3001               	movlw	1
   792     006D  00B1               	movwf	_displaying
   793     006E  3000               	movlw	0
   794     006F  00B2               	movwf	_displaying+1
   795                           
   796                           ;main.c: 100:             overflow400 = 1;
   797     0070  3001               	movlw	1
   798     0071  00FC               	movwf	_overflow400
   799     0072  3000               	movlw	0
   800     0073  00FD               	movwf	_overflow400+1
   801                           
   802                           ;main.c: 101:         } else if (overflow400 > 0) {
   803     0074  2888               	goto	i1l742
   804     0075                     i1l738:
   805     0075  087D               	movf	_overflow400+1,w
   806     0076  3A80               	xorlw	128
   807     0077  00FF               	movwf	btemp1
   808     0078  3080               	movlw	128
   809     0079  027F               	subwf	btemp1,w
   810     007A  1D03               	skipz
   811     007B  287E               	goto	u20_25
   812     007C  3001               	movlw	1
   813     007D  027C               	subwf	_overflow400,w
   814     007E                     u20_25:
   815     007E  1C03               	skipc
   816     007F  2881               	goto	u20_21
   817     0080  2882               	goto	u20_20
   818     0081                     u20_21:
   819     0081  2888               	goto	i1l742
   820     0082                     u20_20:
   821     0082                     i1l740:
   822                           
   823                           ;main.c: 102:             overflow400++;
   824     0082  3001               	movlw	1
   825     0083  07FC               	addwf	_overflow400,f
   826     0084  1803               	skipnc
   827     0085  0AFD               	incf	_overflow400+1,f
   828     0086  3000               	movlw	0
   829     0087  07FD               	addwf	_overflow400+1,f
   830     0088                     i1l742:
   831                           
   832                           ;main.c: 105:     if (INTCONbits.RBIE && INTCONbits.RBIF && displaying==0) {
   833     0088  1D8B               	btfss	11,3	;volatile
   834     0089  288B               	goto	u21_21
   835     008A  288C               	goto	u21_20
   836     008B                     u21_21:
   837     008B  28D0               	goto	i1l68
   838     008C                     u21_20:
   839     008C                     i1l744:
   840     008C  1C0B               	btfss	11,0	;volatile
   841     008D  288F               	goto	u22_21
   842     008E  2890               	goto	u22_20
   843     008F                     u22_21:
   844     008F  28D0               	goto	i1l68
   845     0090                     u22_20:
   846     0090                     i1l746:
   847     0090  1283               	bcf	3,5	;RP0=0, select bank0
   848     0091  1303               	bcf	3,6	;RP1=0, select bank0
   849     0092  0831               	movf	_displaying,w
   850     0093  0432               	iorwf	_displaying+1,w
   851     0094  1D03               	btfss	3,2
   852     0095  2897               	goto	u23_21
   853     0096  2898               	goto	u23_20
   854     0097                     u23_21:
   855     0097  28D0               	goto	i1l68
   856     0098                     u23_20:
   857     0098                     i1l748:
   858                           
   859                           ;main.c: 106:         if (PORTBbits.RB0 == 1) {
   860     0098  1C06               	btfss	6,0	;volatile
   861     0099  289B               	goto	u24_21
   862     009A  289C               	goto	u24_20
   863     009B                     u24_21:
   864     009B  28A6               	goto	i1l61
   865     009C                     u24_20:
   866     009C                     i1l750:
   867                           
   868                           ;main.c: 107:             TMR1 = 0;
   869     009C  018E               	clrf	14	;volatile
   870     009D  018F               	clrf	15	;volatile
   871     009E                     i1l752:
   872                           
   873                           ;main.c: 108:             tmr1_load_400ms();
   874     009E  118A  214A  118A   	fcall	i1_tmr1_load_400ms
   875     00A1                     i1l754:
   876                           
   877                           ;main.c: 109:             overflow400 = 1;
   878     00A1  3001               	movlw	1
   879     00A2  00FC               	movwf	_overflow400
   880     00A3  3000               	movlw	0
   881     00A4  00FD               	movwf	_overflow400+1
   882                           
   883                           ;main.c: 110:         } else if (PORTBbits.RB0 == 0) {
   884     00A5  28CF               	goto	i1l764
   885     00A6                     i1l61:
   886     00A6  1806               	btfsc	6,0	;volatile
   887     00A7  28A9               	goto	u25_21
   888     00A8  28AA               	goto	u25_20
   889     00A9                     u25_21:
   890     00A9  28CF               	goto	i1l764
   891     00AA                     u25_20:
   892     00AA                     i1l756:
   893                           
   894                           ;main.c: 111:             int mics = get_mics();
   895     00AA  118A  20F2  118A   	fcall	_get_mics
   896     00AD  0871               	movf	?_get_mics+1,w
   897     00AE  00F8               	movwf	isr@mics+1
   898     00AF  0870               	movf	?_get_mics,w
   899     00B0  00F7               	movwf	isr@mics
   900     00B1                     i1l758:
   901                           
   902                           ;main.c: 112:             if (mics < 30000) {
   903     00B1  0878               	movf	isr@mics+1,w
   904     00B2  3A80               	xorlw	128
   905     00B3  00FF               	movwf	btemp1
   906     00B4  30F5               	movlw	245
   907     00B5  027F               	subwf	btemp1,w
   908     00B6  1D03               	skipz
   909     00B7  28BA               	goto	u26_25
   910     00B8  3030               	movlw	48
   911     00B9  0277               	subwf	isr@mics,w
   912     00BA                     u26_25:
   913     00BA  1803               	skipnc
   914     00BB  28BD               	goto	u26_21
   915     00BC  28BE               	goto	u26_20
   916     00BD                     u26_21:
   917     00BD  28C3               	goto	i1l64
   918     00BE                     u26_20:
   919     00BE                     i1l760:
   920                           
   921                           ;main.c: 113:                 PORTC = 0b11110101;
   922     00BE  30F5               	movlw	245
   923     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   924     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   925     00C1  0087               	movwf	7	;volatile
   926                           
   927                           ;main.c: 114:             } else if (mics < 200000) {
   928     00C2  28C7               	goto	i1l762
   929     00C3                     i1l64:
   930                           
   931                           ;main.c: 115:                 PORTC = 0b00001000;
   932     00C3  3008               	movlw	8
   933     00C4  1283               	bcf	3,5	;RP0=0, select bank0
   934     00C5  1303               	bcf	3,6	;RP1=0, select bank0
   935     00C6  0087               	movwf	7	;volatile
   936     00C7                     i1l762:	
   937                           ;main.c: 116:             } else {
   938                           
   939                           
   940                           ;main.c: 119:             overflow400 = 2;
   941     00C7  3002               	movlw	2
   942     00C8  00FC               	movwf	_overflow400
   943     00C9  3000               	movlw	0
   944     00CA  00FD               	movwf	_overflow400+1
   945                           
   946                           ;main.c: 120:             displaying = 1;
   947     00CB  3001               	movlw	1
   948     00CC  00B1               	movwf	_displaying
   949     00CD  3000               	movlw	0
   950     00CE  00B2               	movwf	_displaying+1
   951     00CF                     i1l764:
   952                           
   953                           ;main.c: 122:         INTCONbits.RBIF = 0;
   954     00CF  100B               	bcf	11,0	;volatile
   955     00D0                     i1l68:
   956     00D0  0876               	movf	??_isr+2,w
   957     00D1  00FF               	movwf	btemp1
   958     00D2  0875               	movf	??_isr+1,w
   959     00D3  008A               	movwf	10
   960     00D4  0E74               	swapf	??_isr,w
   961     00D5  0083               	movwf	3
   962     00D6  0EFE               	swapf	btemp,f
   963     00D7  0E7E               	swapf	btemp,w
   964     00D8  0009               	retfie
   965     00D9                     __end_of_isr:
   966                           
   967                           	psect	intentry
   968     0004                     __pintentry:	
   969                           ;incstack = 0
   970                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+btemp1+cstack]
   971                           
   972     0004                     interrupt_function:
   973     007E                     saved_w         set	btemp
   974     0004  00FE               	movwf	btemp
   975     0005  0E03               	swapf	3,w
   976     0006  00F4               	movwf	??_isr
   977     0007  080A               	movf	10,w
   978     0008  00F5               	movwf	??_isr+1
   979     0009  087F               	movf	btemp1,w
   980     000A  00F6               	movwf	??_isr+2
   981     000B  118A  282E         	ljmp	_isr
   982                           
   983                           	psect	text4
   984     014A                     __ptext4:	
   985 ;; *************** function i1_tmr1_load_400ms *****************
   986 ;; Defined at:
   987 ;;		line 62 in file "main.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1001 ;;      Params:         0       0       0       0
  1002 ;;      Locals:         0       0       0       0
  1003 ;;      Temps:          0       0       0       0
  1004 ;;      Totals:         0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_isr
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014     014A                     i1_tmr1_load_400ms:	
  1015                           ;psect for function i1_tmr1_load_400ms
  1016                           
  1017     014A                     i1l714:	
  1018                           ;incstack = 0
  1019                           ; Regs used in i1_tmr1_load_400ms: [wreg]
  1020                           
  1021                           
  1022                           ;main.c: 63:     TMR1 = start_400ms;
  1023     014A  087A               	movf	_start_400ms+1,w
  1024     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1025     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1026     014D  008F               	movwf	15	;volatile
  1027     014E  0879               	movf	_start_400ms,w
  1028     014F  008E               	movwf	14	;volatile
  1029     0150                     i1l39:
  1030     0150  0008               	return
  1031     0151                     __end_ofi1_tmr1_load_400ms:
  1032                           
  1033                           	psect	text5
  1034     00F2                     __ptext5:	
  1035 ;; *************** function _get_mics *****************
  1036 ;; Defined at:
  1037 ;;		line 66 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2    0[COMMON] int 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1051 ;;      Params:         2       0       0       0
  1052 ;;      Locals:         0       0       0       0
  1053 ;;      Temps:          2       0       0       0
  1054 ;;      Totals:         4       0       0       0
  1055 ;;Total ram usage:        4 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_isr
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064     00F2                     _get_mics:	
  1065                           ;psect for function _get_mics
  1066                           
  1067     00F2                     i1l710:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _get_mics: [wreg+status,2+status,0]
  1070                           
  1071                           
  1072                           ;main.c: 67:     return (TMR1 - start_400ms)*8;
  1073     00F2  0879               	movf	_start_400ms,w
  1074     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1075     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1076     00F5  020E               	subwf	14,w	;volatile
  1077     00F6  00F2               	movwf	??_get_mics
  1078     00F7  087A               	movf	_start_400ms+1,w
  1079     00F8  1C03               	skipc
  1080     00F9  0A7A               	incf	_start_400ms+1,w
  1081     00FA  020F               	subwf	15,w	;volatile
  1082     00FB  00F3               	movwf	??_get_mics+1
  1083     00FC  1003               	clrc
  1084     00FD  0DF2               	rlf	??_get_mics,f
  1085     00FE  0DF3               	rlf	??_get_mics+1,f
  1086     00FF  1003               	clrc
  1087     0100  0DF2               	rlf	??_get_mics,f
  1088     0101  0DF3               	rlf	??_get_mics+1,f
  1089     0102  1003               	clrc
  1090     0103  0DF2               	rlf	??_get_mics,f
  1091     0104  0DF3               	rlf	??_get_mics+1,f
  1092     0105  0872               	movf	??_get_mics,w
  1093     0106  00F0               	movwf	?_get_mics
  1094     0107  0873               	movf	??_get_mics+1,w
  1095     0108  00F1               	movwf	?_get_mics+1
  1096     0109                     i1l42:
  1097     0109  0008               	return
  1098     010A                     __end_of_get_mics:
  1099     0001                     ___latbits      equ	1
  1100     007E                     btemp           set	126	;btemp
  1101     007E                     btemp0          set	126
  1102     007F                     btemp1          set	127
  1103     007E                     wtemp0          set	126
  1104     007F                     wtemp0a         set	127
  1105     007F                     ttemp0a         set	127
  1106     0080                     ltemp0a         set	128
  1107                           
  1108                           	psect	config
  1109                           
  1110                           ;Config register CONFIG1 @ 0x2007
  1111                           ;	Oscillator Selection bits
  1112                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1113                           ;	Watchdog Timer Enable bit
  1114                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1115                           ;	Power-up Timer Enable bit
  1116                           ;	PWRTE = OFF, PWRT disabled
  1117                           ;	RE3/MCLR pin function select bit
  1118                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1119                           ;	Code Protection bit
  1120                           ;	CP = OFF, Program memory code protection is disabled
  1121                           ;	Data Code Protection bit
  1122                           ;	CPD = OFF, Data memory code protection is disabled
  1123                           ;	Brown Out Reset Selection bits
  1124                           ;	BOREN = OFF, BOR disabled
  1125                           ;	Internal External Switchover bit
  1126                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1127                           ;	Fail-Safe Clock Monitor Enabled bit
  1128                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1129                           ;	Low Voltage Programming Enable bit
  1130                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1131                           ;	In-Circuit Debugger Mode bit
  1132                           ;	DEBUG = 0x1, unprogrammed default
  1133     2007                     	org	8199
  1134     2007  20F1               	dw	8433
  1135                           
  1136                           ;Config register CONFIG2 @ 0x2008
  1137                           ;	Brown-out Reset Selection bit
  1138                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1139                           ;	Flash Program Memory Self Write Enable bits
  1140                           ;	WRT = OFF, Write protection off
  1141     2008                     	org	8200
  1142     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0      19
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_get_mics

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
               _tmr1_init_400ms_tick
 ---------------------------------------------------------------------------------
 (1) _tmr1_init_400ms_tick                                 0     0      0       0
                    _tmr1_load_400ms
 ---------------------------------------------------------------------------------
 (2) _tmr1_load_400ms                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      23
                                              4 COMMON     5     5      0
                           _get_mics
                  i1_tmr1_load_400ms
 ---------------------------------------------------------------------------------
 (4) i1_tmr1_load_400ms                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _get_mics                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _tmr1_init_400ms_tick
     _tmr1_load_400ms

 _isr (ROOT)
   _get_mics
   i1_tmr1_load_400ms

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      19     23.8%
BITBANK0            80      0       0      0.0%
COMMON              14      9      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      33      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Tue Sep 23 11:28:49 2025

                           pc 0002                            l45 0120                            l39 0149  
                          l73 00EF                            l74 00EF                            fsr 0004  
         ??i1_tmr1_load_400ms 0070                           l620 0143                           l700 00E5  
                         l630 0113                           l702 00E7                           l632 0116  
                         l704 00EA                           l634 0119                           l626 010A  
                         l706 00ED                           l636 011C                           l628 0111  
                         l708 00EE                           l638 011D                           l692 00D9  
                         l694 00E0                           l696 00E3                           l698 00E4  
                         _LOW 007B                           _isr 002E                           indf 0000  
                        ?_isr 0070                          _HIGH 0030                          _IOCB 0096  
                        i1l42 0109                          i1l61 00A6                          i1l39 0150  
                        i1l64 00C3                          i1l68 00D0                          _TMR1 000E  
   __end_ofi1_tmr1_load_400ms 0151                          _main 00D9                          btemp 007E  
                        start 000D                         ??_isr 0074                         ?_main 0070  
                       _ANSEL 0188                         i1l710 00F2                         i1l720 003A  
                       i1l714 014A                         i1l730 005B                         i1l722 003D  
                       i1l740 0082                         i1l732 0063                         i1l724 0040  
                       i1l716 002E                         i1l750 009C                         i1l734 006A  
                       i1l726 004D                         i1l718 0034                         i1l742 0088  
                       i1l760 00BE                         i1l752 009E                         i1l744 008C  
                       i1l736 006C                         i1l728 0055                         i1l762 00C7  
                       i1l754 00A1                         i1l746 0090                         i1l738 0075  
                       i1l756 00AA                         i1l764 00CF                         i1l748 0098  
                       i1l758 00B1                         u20_20 0082                         u20_21 0081  
                       u20_25 007E                         u21_20 008C                         u21_21 008B  
                       u22_20 0090                         u14_20 0034                         u22_21 008F  
                       u14_21 0033                         u23_20 0098                         u15_20 003A  
                       u23_21 0097                         u15_21 0039                         u24_20 009C  
                       u16_20 004D                         u24_21 009B                         u16_21 004C  
                       u16_25 0049                         u25_20 00AA                         u17_20 0055  
                       u25_21 00A9                         u17_21 0054                         u26_20 00BE  
                       u18_20 0063                         u26_21 00BD                         u18_21 0062  
                       u26_25 00BA                         u19_20 006A                         u19_21 0069  
                       _PORTC 0007                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         btemp0 007E                         btemp1 007F  
                       pclath 000A                         status 0003                         wtemp0 007E  
      ??_tmr1_init_400ms_tick 0000               __initialization 000F                  __end_of_main 00F2  
                      ??_main 0000             ??_tmr1_load_400ms 0000                        _ANSELH 0189  
            __end_of_get_mics 010A                  __pdataCOMMON 0079                        ltemp0a 0080  
                      saved_w 007E                        ttemp0a 007F                        wtemp0a 007F  
     __end_of__initialization 002B                __pcstackCOMMON 0070                  __pidataBANK0 0121  
                  __pbssBANK0 0031                    __pmaintext 00D9                    __pintentry 0004  
                  _displaying 0031                     ?_get_mics 0070               _tmr1_load_400ms 0143  
                     __ptext1 010A                       __ptext2 0143                       __ptext3 002E  
                     __ptext4 014A                       __ptext5 00F2                     _T1CONbits 0010  
                     _options 0020                    ??_get_mics 0072          end_of_initialization 002B  
                     isr@mics 0077                     _PORTAbits 0005                     _PORTBbits 0006  
     __end_of_tmr1_load_400ms 014A                 __pidataCOMMON 0151           start_initialization 000F  
                 __end_of_isr 00D9                    init_fetch0 0132                   __pdataBANK0 0020  
                 __pbssCOMMON 007C                     ___latbits 0001                 __pcstackBANK0 0000  
            ?_tmr1_load_400ms 0070             interrupt_function 0004                      _PIE1bits 008C  
                    _PIR1bits 000C  __end_of_tmr1_init_400ms_tick 0121                      _get_mics 00F2  
                  _INTCONbits 000B                      init_ram0 0136                      intlevel1 0000  
        _tmr1_init_400ms_tick 010A                   _overflow400 007C             i1_tmr1_load_400ms 014A  
       ?_tmr1_init_400ms_tick 0070            ?i1_tmr1_load_400ms 0070                   _start_400ms 0079  
